What is node js ?
 # language
 # framework
 # lib
 # tool
 # runtime environment ********

 Node js is runtime environment for javascript
 We want to run javascript without a browser ==> node JS 

# we can js code
# node we can build server 
# JS & ES6

serve java program over internet ==> Apache / Nginx
serve py program over internet ==> Apache / Nginx
serve php program over internet ==> Apache / Nginx

serve js program over internet ==> Node JS

# we can develop 
    => Mobile App (react native / angular native),
       Desktop App (Electron js),
       FrontEnd App (React DOM / Angular DOM) ,
       Server App (Express js)

modules ==> part code,
modals ==> bootstrap popup, 
model ==> can connect with data or DB

# modules 
    ==> native => in-build in node js :: http, https , path , os , fs , url , events, crypto 
    ==> custom modules :: created by developers :: restaurant , user , payment
    ==> 3rd party modules :: some one else :: react(lib) , angular(fw), express(fw) , mongoose(lib) , mongodb
    
module can lib,fw, function/variable , array , object , class

# node js basic server
# read file in node js
# parse a url in node js

# Express JS ==> zomato clone
# MongoDB ==> data in data base
# zomato clone api

Search on google.
# what is modules
# package.json file
# npm command & What is npm


/
/about
/our-project
/contact-us


CLI i.e command line interface ==> npm
npm ==> node package manage
    ==> manage you project
    ==> add new package (module)
    ==> update package 
    ==> remove a package
    ==> create project configuration file called as package.json
    ==> package.json will have all the details about our project
            name 
            version
            script ==> run feature of project
            list of our dependance

// Search 
what is express js ?
what is mean by a middleware ?
what is mean by routing ?
what is http methods ?
what use of http methods ?
what is http status code ?
what is use of http status code ?

3rd assignment deadline is 20 th june 2023


node js project
    package.json
    index.js / app.js / server.js

    create a package.json file command we use is
    npm init
    npm init -y

Express Js is framework for node js to create a server
Express Js runs over the node js
20% is available as base of project
Express JS can boost application development
Express support app features
Express application simple to maintain
Express use MVC architecture pattern for application development.
M : model , V : View , C : Controller
Express js comes with in-build Routing
    under http we a routing method



    GET => Read data of server 
    POST => Create/Add/Insert Record
    PUT ==> Update Data Over Server
    DELETE ==> Remove Data From Server
    
    CRUD ==> operations

How install express js.
    npm i <package_name>
    npm i <package_name>@version
    npm i express

Express JS ==> MVC
M => Model (work data/database)
V => View  (UI / Front End) (files of template) 
C => Controller (Management of functionality)
public
    ==> js 
    ==> css
    ==> images
    ==> font


TEST API  
    Postman (manual testing tool)
        GET
        POST
        PUT
        DELETE
STATUS Code  
    200 ==> all is well,
    304 ==> not modify,
    client error => 400 401, 403 , 404 ,
    server error => 500 , 503, 502, 501, 504

Query Params ==> Type are use to read dynamic data form usr like /product/1 , /product/2 ,/product/3
Test that api on postman
How build the api


Query String*



SQL ==> Structure Query Language
    ==> Data is stored in a table format
    ==> Need space to store data & more RAM
    ==> not flexible store data
    ==> Database Server ==> Database ==> Tables ==> Rows ==> Column

    ==> Simple to learn
    ==> Relational Logic
    ==> Embed a record in json format (per Column)



No-SQL Database  
    => No STructure Query Language
    => Data is Stored in Document Format
    ==> Need less space to store data & more RAM
    ==> flexible to store data
    ==> Database Server ==> Database ==> Collections ==> Document ==> Fields

    ==> Simple  to learn
    ==> Relational Logic
    ==> Embed a record in json format (per Field)
    

MongoDB ==> 
    store a huge amount of data in less space
    don't want to store data with constraint / schema / structure

    Download it https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.6-signed.msi
    Install  MongoDB
    MongoDBShell  https://www.mongodb.com/try/download/shell

    Copy folder to C Drive 
    Extract it 
    mongosh


    copy C:\mongosh\bin and set it to environment
